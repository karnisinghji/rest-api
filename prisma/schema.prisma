// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model Customer {
  id    Int     @id @default(autoincrement())  // Auto-incrementing ID
  name      String
  email     String  @unique
  password  String 
  address   String
  mobile_number String 
  orders    Order[]
    created_on  DateTime @default(now())
  modified_on  DateTime @default(now())

}




model Product {
   id    Int     @id @default(autoincrement())  // Auto-incrementing ID
  name     String
  price    Float
  orders   OrderProducts[]
   created_on  DateTime @default(now())
  modified_on  DateTime @default(now())
}

model Order {
   id    Int     @id @default(autoincrement())  // Auto-incrementing ID
  customerId Int
  billing_address String 
  status     String
  transaction_id   String   @default(uuid())

  created_on  DateTime @default(now())
  modified_on  DateTime @default(now())
  customer   Customer @relation(fields: [customerId], references: [id])
  products   OrderProducts[]
}

model OrderProducts {
  orderId   Int
  productId Int
  quantity  Int

  order     Order   @relation(fields: [orderId], references: [id], onDelete: Cascade)
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@id([orderId, productId])  // Composite primary key
}